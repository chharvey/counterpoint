/* LR grammar */

File ::= #x02 Expression? #x03

Expression ::= ExpressionAdditive

ExpressionAdditive       ::= (ExpressionAdditive       ("+" | "-"))? ExpressionMultiplicative
ExpressionMultiplicative ::= (ExpressionMultiplicative ("*" | "/"))? ExpressionExponential
ExpressionExponential    ::=  ExpressionUnarySymbol    ("^"          ExpressionExponential)?

ExpressionUnarySymbol ::= ExpressionUnit | ("+" | "-") ExpressionUnarySymbol

ExpressionUnit ::=
	PrimitiveLiteral   |
	StringTemplate     |
	"(" Expression ")"

StringTemplate ::=
	STRING_TEMPLATE_FULL |
	STRING_TEMPLATE_HEAD Expression? (STRING_TEMPLATE_MIDDLE Expression?)* STRING_TEMPLATE_TAIL

PrimitiveLiteral ::=
	NUMBER         |
	STRING_LITERAL

STRING_LITERAL         ::= [./lexical-grammar.ebnf#StringLiteral]
STRING_TEMPLATE_FULL   ::= [./lexical-grammar.ebnf#StringTemplateFull]
STRING_TEMPLATE_HEAD   ::= [./lexical-grammar.ebnf#StringTemplateHead]
STRING_TEMPLATE_MIDDLE ::= [./lexical-grammar.ebnf#StringTemplateMiddle]
STRING_TEMPLATE_TAIL   ::= [./lexical-grammar.ebnf#StringTemplateTail]
NUMBER                 ::= [./lexical-grammar.ebnf#Number]
