/* LR grammar */

Goal ::= #x02 Statement* #x03



Statement ::=
	DeclarationVariable |
	StatementAssignment |
	Expression? ";"

DeclarationVariable ::= "let" "unfixed"? IDENTIFIER "=" Expression ";"

StatementAssignment ::= IDENTIFIER "=" Expression ";"



Expression ::= ExpressionAdditive

ExpressionAdditive       ::= (ExpressionAdditive       ("+" | "-"))? ExpressionMultiplicative
ExpressionMultiplicative ::= (ExpressionMultiplicative ("*" | "/"))? ExpressionExponential
ExpressionExponential    ::=  ExpressionUnarySymbol    ("^"          ExpressionExponential)?

ExpressionUnarySymbol ::= ExpressionUnit | ("+" | "-") ExpressionUnarySymbol

ExpressionUnit ::=
	PrimitiveLiteral   |
	StringTemplate     |
	IDENTIFIER         |
	"(" Expression ")"

StringTemplate ::=
	TEMPLATE_LITERAL_FULL |
	TEMPLATE_LITERAL_HEAD Expression? (TEMPLATE_LITERAL_MIDDLE Expression?)* TEMPLATE_LITERAL_TAIL

PrimitiveLiteral ::=
	NUMBER |
	STRING

STRING          ::= [./lexical-grammar.ebnf#String]
TEMPLATE_FULL   ::= [./lexical-grammar.ebnf#TemplateFull]
TEMPLATE_HEAD   ::= [./lexical-grammar.ebnf#TemplateHead]
TEMPLATE_MIDDLE ::= [./lexical-grammar.ebnf#TempalteMiddle]
TEMPLATE_TAIL   ::= [./lexical-grammar.ebnf#TempalteTail]
NUMBER          ::= [./lexical-grammar.ebnf#Number]
IDENTIFIER      ::= [./lexical-grammar.ebnf#Identifier]
