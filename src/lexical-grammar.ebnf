FileBound ::=
	#x02 /* START OF TEXT */ |
	#x03 /* END OF TEXT   */

Whitespace ::= Whitespace? (
	#x20 /* SPACE                     */ |
	#x09 /* CHARACTER TABULATION `\t` */ |
	#x0A /* LINE FEED (LF)       `\n` */ |
	#x0D /* CARRIAGE RETURN (CR) `\r` */
)

/* more whitespace characters:
#x000B	LINE TABULATION
#x000C	FORM FEED (FF)
#x00A0	NO-BREAK SPACE
#x1680	OGHAM SPACE MARK
#x2000	EN QUAD
#x2001	EM QUAD
#x2002	EN SPACE
#x2003	EM SPACE
#x2004	THREE-PER-EM SPACE
#x2005	FOUR-PER-EM SPACE
#x2006	SIX-PER-EM SPACE
#x2007	FIGURE SPACE
#x2008	PUNCTUATION SPACE
#x2009	THIN SPACE
#x200A	HAIR SPACE
#x200B	ZERO WIDTH SPACE
#x2028	LINE SEPARATOR
#x2029	PARAGRAPH SEPARATOR
#x202F	NARROW NO-BREAK SPACE
#x205F	MEDIUM MATHEMATICAL SPACE
#x3000	IDEOGRAPHIC SPACE
#xFEFF	ZERO WIDTH NO-BREAK SPACE
*/



Comment ::= CommentLine | CommentMulti | CommentMultiNest | CommentDoc

CommentLine ::= "\" ([^bqodxz#x0A#x03] [^#x0A#x03]*)? /*? lookahead: #x0A ?*/

CommentMulti ::= '"' [^"#x03]* '"'

CommentMultiNest ::= '"{' CommentMultiNestChars? '}"'
CommentMultiNestChars ::=
	[^}"#x03] CommentMultiNestChars?        |
	"}" ([^"#x03] CommentMultiNestChars?)?  |
	'"' ([^{#x03] CommentMultiNestChars?)?  |
	CommentMultiNest CommentMultiNestChars?

CommentDoc ::= /*? following: #x0A [#x09#x20]* ?*/'"""' #x0A (/*? unequal: [#x09#x20]* '"""' ?*/[^#x03]* #x0A)? [#x09#x20]* '"""' /*? lookahead: #x0A ?*/



StringLiteral ::= "'" StringLiteralChars? "'"
StringLiteralChars ::=
	[^'\#x03]               StringLiteralChars?   |
	"\" StringLiteralEscape StringLiteralChars?   |
	"\u"     ([^'{#x03]     StringLiteralChars?)? |
	"\" #x0D ([^'#x0A#x03]  StringLiteralChars?)?

StringLiteralEscape ::= EscapeChar | EscapeCode | LineContinuation | NonEscapeChar

EscapeChar       ::= "'" | "\" | "s" | "t" | "n" | "r"
EscapeCode       ::= "u{" DigitSequenceHex? "}"
LineContinuation ::= #x0D? #x0A
NonEscapeChar    ::= [^'\stnru#x0D#x0A#x03]

StringTemplateFull   ::= "`"  StringTemplateCharsEndDelim ? "`"
StringTemplateHead   ::= "`"  StringTemplateCharsEndInterp? "{{"
StringTempalteMiddle ::= "}}" StringTemplateCharsEndInterp? "{{"
StringTempalteTail   ::= "}}" StringTemplateCharsEndDelim ? "`"

StringTemplateCharsEndDelim ::=
	      [^`{\#x03]                          StringTemplateCharsEndDelim ?   |
	"{" (([^`{\#x03] | "\"  ([^`#x03] | "`")) StringTemplateCharsEndDelim ?)? |
	                   "\"  ([^`#x03] | "`")  StringTemplateCharsEndDelim ?

StringTemplateCharsEndInterp ::=
	      [^`{\#x03]                          StringTemplateCharsEndInterp?   |
	"{"  ([^`{\#x03] | "\"  ([^`#x03] | "`")) StringTemplateCharsEndInterp?   |
	                   "\" (([^`#x03] | "`")  StringTemplateCharsEndInterp?)?



Number ::= IntegerLiteral

IntegerLiteral ::=
	"\b"  DigitSequenceBin |
	"\q"  DigitSequenceQua |
	"\o"  DigitSequenceOct |
	"\d"? DigitSequenceDec |
	"\x"  DigitSequenceHex |
	"\z"  DigitSequenceHTD

DigitSequenceBin ::= (DigitSequenceBin "_"?)? [0-1]
DigitSequenceQua ::= (DigitSequenceQua "_"?)? [0-3]
DigitSequenceOct ::= (DigitSequenceOct "_"?)? [0-7]
DigitSequenceDec ::= (DigitSequenceDec "_"?)? [0-9]
DigitSequenceHex ::= (DigitSequenceHex "_"?)? [0-9a-f]
DigitSequenceHTD ::= (DigitSequenceHTD "_"?)? [0-9a-z]



Word ::= [A-Za-z_] [A-Za-z0-9_]*



Punctuator ::= ";" | "=" | "+" | "-" | "*" | "/" | "^" | "(" | ")"
