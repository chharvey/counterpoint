{
	"env": {
		"es2021": true,
		"node": true
	},
	"overrides": [
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"sourceType": "module"
	},
	"plugins": [
		"@typescript-eslint"
	],
	"reportUnusedDisableDirectives": true,
	"root": true,
	"rules": {
		/* # File Conventions (should be consistent with `/.editorconfig` file) */
		"eol-last":           "error",
		"linebreak-style":    "error",
		"no-trailing-spaces": "error",

		/* # Layout & Formatting --- https://eslint.org/docs/latest/rules/#layout--formatting */
		/* ## Indentation, Spacing, and Alignment */
		"arrow-spacing":                        "error",
		"comma-spacing":                        "error",
		"dot-location":                         ["error", "property"],
		"func-call-spacing":                    "off",
		"@typescript-eslint/func-call-spacing": "warn",
		"generator-star-spacing":               ["error", "both"],
		"indent":                               ["error", "tab", {
			"SwitchCase":             1,
			"flatTernaryExpressions": true
		}],
		"key-spacing": ["error", {
			"align": "value",
			"mode":  "minimum"
		}],
		"keyword-spacing":                                "off",
		"@typescript-eslint/keyword-spacing":             "error",
		"no-mixed-spaces-and-tabs":                       ["error", "smart-tabs"],
		"rest-spread-spacing":                            "error",
		"semi-spacing":                                   "error",
		"space-before-blocks":                            "off",
		"@typescript-eslint/space-before-blocks":         "error",
		"space-before-function-paren":                    "off",
		"@typescript-eslint/space-before-function-paren": ["warn", {
			"anonymous":  "always",
			"asyncArrow": "always",
			"named":      "never"
		}],
		"space-infix-ops":                    "off",
		"@typescript-eslint/space-infix-ops": "error",
		"space-unary-ops":                    "error",
		"switch-colon-spacing":               "error",
		"template-curly-spacing":             ["error", "always"],
		"template-tag-spacing":               "error",
		"yield-star-spacing":                 ["error", "both"],

		/* ## Grouping Structure Style */
		"array-bracket-newline":                          ["error", "consistent"], // FIXME: require line breaks exactly when there exist line breaks between elements (ignoring inside elements)
		"array-bracket-spacing":                          "warn",
		"array-element-newline":                          ["error", "consistent"],
		"brace-style":                                    "off",
		"@typescript-eslint/brace-style":                 "error",
		"computed-property-spacing":                      "error",
		"function-call-argument-newline":                 ["error", "consistent"],
		"function-paren-newline":                         "error",
		"lines-between-class-members":                    "off",
		"@typescript-eslint/lines-between-class-members": ["error", "always", {"exceptAfterSingleLine": true}],
		"object-curly-newline":                           ["error", {"multiline": true}],
		"object-curly-spacing":                           "off",
		"@typescript-eslint/object-curly-spacing":        "warn",
		"object-property-newline":                        ["error", {"allowAllPropertiesOnSameLine": true}],
		"padded-blocks":                                  ["error", "never"],
		"space-in-parens":                                "warn",

		/* ## Operator Style */
		"arrow-parens":                    "error",
		"comma-dangle":                    "off",
		"@typescript-eslint/comma-dangle": ["error", "always-multiline"],
		"comma-style":                     "error",
		"implicit-arrow-linebreak":        "error",
		"new-parens":                      "error",
		"operator-linebreak":              ["error", "before", {
			"overrides": {
				"=":    "none",
				"*=":   "none",
				"/=":   "none",
				"%=":   "none",
				"+=":   "none",
				"-=":   "none",
				"<<=":  "none",
				">>=":  "none",
				">>>=": "none",
				"&=":   "none",
				"^=":   "none",
				"|=":   "none",
				"**=":  "none",
				"&&=":  "none",
				"||=":  "none",
				"??=":  "none",
				":"  :  "ignore"
			}
		}],
		"quotes":                  ["error", "single"],
		"semi":                    "off",
		"@typescript-eslint/semi": "error",
		"semi-style":              "error",
		"wrap-iife":               ["error", "inside", {"functionPrototypeMethods": true}]
	}
}
